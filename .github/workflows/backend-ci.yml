name: 'Backend ci'

on: 
  push:
    branches:   
      - master
    paths: 
      - 'apps/backend-*/**'
      - 'packages/**/*'

jobs:
  build-code:     
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Use Node.js 17.8.0
      uses: actions/setup-node@v3
      with:
        node-version: '17.8.0'

    - name: Build code
      run: yarn build
  
  determine-images:
    needs: build-code
    name: "Determine images to build"
    runs-on: ubuntu-latest
    outputs:
      some: ${{ steps.builds.outputs.some }}
      auth: ${{ steps.builds.outputs.auth }}
      catalogue: ${{ steps.builds.outputs.catalogue }}
      users: ${{ steps.builds.outputs.users }}
      ugc: ${{ steps.builds.outputs.ugc }}
      search: ${{ steps.builds.outputs.search }}
      integration-tests: ${{ steps.builds.outputs.integration-tests }}
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Get changed files
      id: getfile
      run: |
        echo "::set-output name=files::$(git diff-tree --no-commit-id --name-only -r ${{ github.sha }}| xargs)"

    - name: Determine builds
      id: builds
      run: |
        setOutput () { 
          echo "::set-output name=$1::true"
          echo "::set-output name=some::true"
          echo "set $1"
        }

        set_integration_tests () { 
          setOutput integration-tests
        }
        set_auth () { 
          setOutput auth
        }
        set_catalogue () { 
          setOutput catalogue;
        }
        set_ugc () { 
          setOutput ugc
        }
        set_users () { 
          setOutput users
        }
        set_search () { 
          setOutput search
        }

        integration_tests () {
          if [[ $1 == *"apps/backend-integration-tests"* ]]; then 
            set_integration_tests 
          fi
        }

        auth () {
          if [[ $1 == *"apps/backend-auth"* ]]; then 
            set_auth 
          fi
        }

        catalogue () {
          if [[ $1 == *"apps/backend-catalogue"* ]]; then 
            set_catalogue 
          fi        
        }

        ugc () {
          if [[ $1 == *"apps/backend-ugc"* ]]; then 
            set_ugc 
          fi        
        }

        users () {
          if [[ $1 == *"apps/backend-users"* ]]; then 
            set_users 
          fi        
        }

        search () {
          if [[ $1 == *"apps/backend-search"* ]]; then 
            set_search 
          fi        
        }

        for i in ${{ steps.getfile.outputs.files }}
        do
          echo $i
          if [[ $i == *"packages/"* ]]; then
            set_integration_tests
            set_auth
            set_catalogue
            set_ugc
            set_users
            set_search

            break
          fi

          integration_tests $i
          auth $i
          catalogue $i
          ugc $i
          users $i
          search $i
        done

  build-push-auth-testing-image:
    needs: determine-images
    name: "Build and push auth testing Docker image"
    if: ${{ needs.determine-images.outputs.auth }}
    uses: ./.github/workflows/build-docker-image.yml
    with:
      scope: backend-auth
      image-name-tag: veetik/ecommerce-project-b-auth:test
    secrets: 
      DH_USERNAME: ${{ secrets.DH_USERNAME }}
      DH_TOKEN: ${{ secrets.DH_TOKEN }}

  build-push-catalogue-testing-image:
    needs: determine-images
    name: "Build and push catalogue testing Docker image"
    if: ${{ needs.determine-images.outputs.catalogue }}
    uses: ./.github/workflows/build-docker-image.yml
    with:
      scope: backend-catalogue
      image-name-tag: veetik/ecommerce-project-b-catalogue:test
    secrets: 
      DH_USERNAME: ${{ secrets.DH_USERNAME }}
      DH_TOKEN: ${{ secrets.DH_TOKEN }}

  build-push-ugc-testing-image:
    needs: determine-images
    name: "Build and push ugc testing Docker image"
    if: ${{ needs.determine-images.outputs.ugc }}
    uses: ./.github/workflows/build-docker-image.yml
    with:
      scope: backend-ugc
      image-name-tag: veetik/ecommerce-project-b-ugc:test
    secrets: 
      DH_USERNAME: ${{ secrets.DH_USERNAME }}
      DH_TOKEN: ${{ secrets.DH_TOKEN }}

  build-push-users-testing-image:
    needs: determine-images
    name: "Build and push users testing Docker image"
    if: ${{ needs.determine-images.outputs.users }}
    uses: ./.github/workflows/build-docker-image.yml
    with:
      scope: backend-users
      image-name-tag: veetik/ecommerce-project-b-users:test
    secrets: 
      DH_USERNAME: ${{ secrets.DH_USERNAME }}
      DH_TOKEN: ${{ secrets.DH_TOKEN }}
    
  build-push-search-testing-image:
    needs: determine-images
    name: "Build and push search testing Docker image"
    if: ${{ needs.determine-images.outputs.search }}
    uses: ./.github/workflows/build-docker-image.yml
    with:
      scope: backend-search
      image-name-tag: veetik/ecommerce-project-b-search:test
    secrets: 
      DH_USERNAME: ${{ secrets.DH_USERNAME }}
      DH_TOKEN: ${{ secrets.DH_TOKEN }}

  build-push-integration-tests-image:
    needs: determine-images
    name: "Build and push integration tests Docker image"
    if: ${{ needs.determine-images.outputs.integration-tests }}
    uses: ./.github/workflows/build-docker-image.yml
    with:
      scope: backend-integration-tests
      image-name-tag: veetik/ecommerce-project-b-integration-tests:latest
      dockerfile-name: Dockerfile.test
    secrets: 
      DH_USERNAME: ${{ secrets.DH_USERNAME }}
      DH_TOKEN: ${{ secrets.DH_TOKEN }}
  
  test:
    needs: [determine-images, build-push-auth-testing-image, build-push-catalogue-testing-image, build-push-ugc-testing-image, build-push-users-testing-image, build-push-search-testing-image, build-push-integration-tests-image]
    runs-on: ubuntu-latest
    if: ${{ needs.determine-images.outputs.some && always() }}
    name: "Run tests"
    steps:
    - uses: actions/checkout@v3

    - name: Use Node.js 17.8.0
      uses: actions/setup-node@v3
      with:
        node-version: '17.8.0'

    - name: "Run tests"
      run: yarn test:backend

  