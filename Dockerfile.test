FROM node:17-alpine as base

WORKDIR /app

FROM base AS pruner

ARG SCOPE

RUN yarn global add turbo

COPY ./*.json yarn.lock ./
COPY ./apps ./apps
COPY ./packages ./packages

RUN turbo prune --scope=${SCOPE} --docker


FROM base as all-deps

COPY --from=pruner /app/out/json/ ./
COPY --from=pruner /app/out/yarn.lock ./yarn.lock

RUN yarn --pure-lockfile

FROM base as builder

ARG SCOPE

COPY --from=all-deps /app/ ./
COPY --from=pruner /app/out/full/ ./

RUN yarn turbo run build


FROM base as runner 

RUN wget https://github.com/jwilder/dockerize/releases/download/v0.6.1/dockerize-alpine-linux-amd64-v0.6.1.tar.gz \
    && tar -C /usr/local/bin -xzvf dockerize-alpine-linux-amd64-v0.6.1.tar.gz \
    && rm dockerize-alpine-linux-amd64-v0.6.1.tar.gz

COPY --from=builder /app/ .
COPY --from=all-deps /app/ .

CMD dockerize -wait tcp://test-catalogue-db:5432 -wait tcp://test-users-db:5432 -wait tcp://test-ugc-db:5432 -wait tcp://test-zinc:4080 -timeout 30s sh -c "yarn turbo run db:pushall && yarn turbo run test:backend"